swagger: '2.0'
info:
  description:  Ride Share API providea a platform where riders and drivers to participate in ride share.Riders and drivers will be notified by SMS and email at each stage of ride share flow.
  version: "1.0.0"
  title: Ride Share API
  contact:
    email: ETProd.DeltaTechnology@delta.com
# host: qa-apigateway.delta.com
# basePath: /rideshare/v1

securityDefinitions:
  OauthSecurity:
    type: oauth2
    flow: application
    tokenUrl: 'https://qa-apigateway.delta.com/v1/oauth/token'
    scopes:
      default: Default scope
schemes:
  - https
x-api-type: businessProcess
paths:
  /user:
    post:
      tags:
      - User
      description: This resource creates a user. A user can be a driver or rider
      operationId: createUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: header
          description: A unique id for each request generated by each application
          type: string
        - name: appId
          in: header
          description: The Id of the application within the channel making the request
          type: string
        - name: channelId
          in: header
          description: The Id of the channel making the request
          type: string
        - name: user
          in: body
          description: Create User API Request Object
          required: true
          schema:
            $ref: '#/definitions/user'
      security:
        - OauthSecurity: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user'
        '400':
          description: Bad Request. 
          schema:
            $ref: '#/definitions/error'
        '401':
          description: Unauthorized. 
          schema:
            $ref: '#/definitions/error'    
        '403':
          description: Forbidden. 
          schema:
            $ref: '#/definitions/error'    
        '404':
          description: Not Found. 
          schema:
            $ref: '#/definitions/error' 
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Internal Server Error. 
          schema:
            $ref: '#/definitions/error'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/error'
  /user/auth:
    post:
      tags:
      - User
      description: This resource authenticates a logging user.
      operationId: auth
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: header
          description: A unique id for each request generated by each application
          type: string
        - name: appId
          in: header
          description: The Id of the application within the channel making the request
          type: string
        - name: channelId
          in: header
          description: The Id of the channel making the request
          type: string
        - name: user
          in: body
          description: User API Request Object
          required: true
          schema:
            $ref: '#/definitions/user'
      security:
        - OauthSecurity: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user'
        '400':
          description: Bad Request. 
          schema:
            $ref: '#/definitions/error'
        '401':
          description: Unauthorized. 
          schema:
            $ref: '#/definitions/error'    
        '403':
          description: Forbidden. 
          schema:
            $ref: '#/definitions/error'    
        '404':
          description: Not Found. 
          schema:
            $ref: '#/definitions/error' 
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Internal Server Error. 
          schema:
            $ref: '#/definitions/error'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/error'
            
  /vehicle/search:
    post:
      tags:
      - Vehicle
      description: This resource lists all available vehicles information in the user area based on the user entered search criteria.
      operationId: vehicleInventory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: header
          description: A unique id for each request generated by each application
          type: string
        - name: appId
          in: header
          description: The Id of the application within the channel making the request
          type: string
        - name: channelId
          in: header
          description: The Id of the channel making the request
          type: string
        - name: vehicle
          in: body
          description: User API Request Object
          required: true
          schema:
            $ref: '#/definitions/user'
      security:
        - OauthSecurity: []
      responses:
        '200':
          description: OK
          schema:
           type: "array"
           items:
            $ref: "#/definitions/vehicle"
        '400':
          description: Bad Request. 
          schema:
            $ref: '#/definitions/error'
        '401':
          description: Unauthorized. 
          schema:
            $ref: '#/definitions/error'    
        '403':
          description: Forbidden. 
          schema:
            $ref: '#/definitions/error'    
        '404':
          description: Not Found. 
          schema:
            $ref: '#/definitions/error' 
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Internal Server Error. 
          schema:
            $ref: '#/definitions/error'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/error'
            
  /vehicle:
    post:
      tags:
      - Vehicle
      description: This resource will register a new vehicle.
      operationId: vehicleRegistration
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: header
          description: A unique id for each request generated by each application
          type: string
        - name: appId
          in: header
          description: The Id of the application within the channel making the request
          type: string
        - name: channelId
          in: header
          description: The Id of the channel making the request
          type: string
        - name: vehicle
          in: body
          description: Vehicle API Request Object
          required: true
          schema:
            $ref: '#/definitions/vehicle'
      security:
        - OauthSecurity: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vehicle'
        '400':
          description: Bad Request. 
          schema:
            $ref: '#/definitions/error'
        '401':
          description: Unauthorized. 
          schema:
            $ref: '#/definitions/error'    
        '403':
          description: Forbidden. 
          schema:
            $ref: '#/definitions/error'    
        '404':
          description: Not Found. 
          schema:
            $ref: '#/definitions/error' 
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Internal Server Error. 
          schema:
            $ref: '#/definitions/error'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/error'
  /trip:
    post:
      tags:
      - Trip
      description: This resource will be used to post a trip by driver.
      operationId: createTrip
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: header
          description: A unique id for each request generated by each application
          type: string
        - name: appId
          in: header
          description: The Id of the application within the channel making the request
          type: string
        - name: channelId
          in: header
          description: The Id of the channel making the request
          type: string
        - name: trip
          in: body
          description: Trip API Request Object
          required: true
          schema:
            $ref: '#/definitions/trip'
      security:
        - OauthSecurity: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/trip'
        '400':
          description: Bad Request. 
          schema:
            $ref: '#/definitions/error'
        '401':
          description: Unauthorized. 
          schema:
            $ref: '#/definitions/error'    
        '403':
          description: Forbidden. 
          schema:
            $ref: '#/definitions/error'    
        '404':
          description: Not Found. 
          schema:
            $ref: '#/definitions/error' 
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Internal Server Error. 
          schema:
            $ref: '#/definitions/error'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/error'
  /trip/search:
    get:
      tags:
      - Trip
      description: This resource used to search all the available trips based on the search criteria.
      operationId: searchTrips
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: header
          description: A unique id for each request generated by each application
          type: string
        - name: appId
          in: header
          description: The Id of the application within the channel making the request
          type: string
        - name: channelId
          in: header
          description: The Id of the channel making the request
          type: string
        - name: "source"
          in: "query"
          description: "Source/origin of the trip"
          required: true
          type: "string"
        - name: "destination"
          in: "query"
          description: "destination of the trip"
          required: true
          type: "string"
        - name: "time"
          in: "query"
          description: "Start time of the trip"
          required: true
          type: "string"

      security:
        - OauthSecurity: []
      responses:
        '200':
          description: OK
          schema:
           type: "array"
           items:
            $ref: "#/definitions/trip"
        '400':
          description: Bad Request. 
          schema:
            $ref: '#/definitions/error'
        '401':
          description: Unauthorized. 
          schema:
            $ref: '#/definitions/error'    
        '403':
          description: Forbidden. 
          schema:
            $ref: '#/definitions/error'    
        '404':
          description: Not Found. 
          schema:
            $ref: '#/definitions/error' 
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Internal Server Error. 
          schema:
            $ref: '#/definitions/error'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/error'
  
  /rider/reserve:
    post:
      tags:
      - Rider
      description: This resource used to reserve a ride on a particular trip
      operationId: tripReserve
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: header
          description: A unique id for each request generated by each application
          type: string
        - name: appId
          in: header
          description: The Id of the application within the channel making the request
          type: string
        - name: channelId
          in: header
          description: The Id of the channel making the request
          type: string
        - name: rider
          in: body
          description: Rider Details API Request Object
          required: true
          schema:
            $ref: "#/definitions/RideDetails"

      security:
        - OauthSecurity: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/trip'
        '400':
          description: Bad Request. 
          schema:
            $ref: '#/definitions/error'
        '401':
          description: Unauthorized. 
          schema:
            $ref: '#/definitions/error'    
        '403':
          description: Forbidden. 
          schema:
            $ref: '#/definitions/error'    
        '404':
          description: Not Found. 
          schema:
            $ref: '#/definitions/error' 
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Internal Server Error. 
          schema:
            $ref: '#/definitions/error'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/error'
            
  /trip/cancel/{tripId}:
    post:
      tags:
      - Trip
      description: This resource used to cancle entire trip by driver.
      operationId: cancelTrip
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: header
          description: A unique id for each request generated by each application
          type: string
        - name: appId
          in: header
          description: The Id of the application within the channel making the request
          type: string
        - name: channelId
          in: header
          description: The Id of the channel making the request
          type: string
        - name: tripId
          description: unique id of the trip
          in: path
          required: true
          type: string

      security:
        - OauthSecurity: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/trip'
        '400':
          description: Bad Request. 
          schema:
            $ref: '#/definitions/error'
        '401':
          description: Unauthorized. 
          schema:
            $ref: '#/definitions/error'    
        '403':
          description: Forbidden. 
          schema:
            $ref: '#/definitions/error'    
        '404':
          description: Not Found. 
          schema:
            $ref: '#/definitions/error' 
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Internal Server Error. 
          schema:
            $ref: '#/definitions/error'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/error'
  /rider/cancel/{tripId}/user/{userId}:
    post:
      tags:
      - Rider
      description: This resource used to cancel thier individual trip by a rider
      operationId: cancelRiderTrip
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: transactionId
          in: header
          description: A unique id for each request generated by each application
          type: string
        - name: appId
          in: header
          description: The Id of the application within the channel making the request
          type: string
        - name: channelId
          in: header
          description: The Id of the channel making the request
          type: string
        - name: tripId
          description: unique id of the order
          in: path
          required: true
          type: string
        - name: userId
          description: unique id of the order
          in: path
          required: true
          type: string

      security:
        - OauthSecurity: []
      responses:
        '200':
          description: OK
          schema:
            $ref: "#/definitions/RideDetails"
        '400':
          description: Bad Request. 
          schema:
            $ref: '#/definitions/error'
        '401':
          description: Unauthorized. 
          schema:
            $ref: '#/definitions/error'    
        '403':
          description: Forbidden. 
          schema:
            $ref: '#/definitions/error'    
        '404':
          description: Not Found. 
          schema:
            $ref: '#/definitions/error' 
        '429':
          description: Too Many Requests
          schema:
            $ref: '#/definitions/error'
        '500':
          description: Internal Server Error. 
          schema:
            $ref: '#/definitions/error'
        '502':
          description: Bad Gateway
          schema:
            $ref: '#/definitions/error'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/error'
        '504':
          description: Gateway Timeout
          schema:
            $ref: '#/definitions/error'
definitions:
  vehicle:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: unique id of a vehicle
      licensePlateNum:
        type: string
        format: int64
        description: unique license plate number
      type:
        type: string
        format: int64
        description: type of vehicle Ex - Sedan SUV Truck Coupe
      owner:
        $ref: "#/definitions/user"
      passengerCapacity:
        type: integer
        description: passenger capacity of a vehicle
      luggageCapacity:
        type: integer
        description: luggage capacity of a vehicle
      color:
        type: string
        description: color of a vehicle
      status:
        type: string
        description: status of a vehicle Ex - ACTIVE, INACTIVE
    
  user:
    type: object
    properties:
      username:
        type: string
        description: user name 
      firstName:
        type: string
        description: first name of an user
      lastName:
        type: string
        description: last name of an user
      email:
        type: string
        description: email id of an user
      phone:
        type: string
        description: phone number of an user
      userType:
        type: string
        description: type of user
      status:
        type: string
        description: status of an user Ex - ACTIVE , INACTIVE
      modeOfContact:
        type: string
        description: preferred commuinication mode, SMS, EMAIL
      secretKey:
        type: string
        description: encrypted secret key for login
  
  trip:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: unique id of a trip
      fromLocation:
        type: string
        description: source/origin of a trip
      toLocation:
        type: string
        description: detsination location of a trip
      pickupLocation:
        type: string
        description: pickup point location of a trip
      dropOffLocation:
        type: string
        description: dropff location of a trip
      tripType:
        type: string
      time:
        type: string
        description: starting time of trip
      availbleSeatSpace:
        type: string
        description: number of remaining seats available 
      availbleluggageSpace:
        type: string
        description: number of remaining luggage capacity
      status:
        type: string
        description: status of a trip ACTIVE, INACTIVE
      comments:
        type: string
        description: user comments about the trip
      user:
          $ref: "#/definitions/user"
      vehicle:
          $ref: "#/definitions/vehicle"
          
  RideDetails:
    type: object
    properties:
      id:
        type: string
        description: unique id of a rider
      status:
        type: string
        description: status of a rider
      comments:
        type: string
        description: user comments about the ride
      trip:
          $ref: '#/definitions/trip'
      rider:
          $ref: "#/definitions/user"
  error:
    type: object
    description: |
      'ErrorResponse represents error code, message, developer message and more info for a given api. Every HTTP status code returns different `code` value in the reponse based on the nature of error occured. Also, one HTTP status code can return different `code` for different usecases. The below table shows mapping of different `code`, `message` & `developerMessage` for each HTTP status code.


      | **HTTP Status Code** | **Code** | **Message** | **Developer Message** |
      | ------------- |:-------------:|-------------:|-------------:|
      | `400` | `APG4010` | Extract Variable Reference Not Found | The variable could not be extracted|
      | `400` | `APG400` | Variable Reference Not Found | The variable could not be assigned|
      | `400` | `APG4009` | Bad Request | Invalid Input Value - Payload|
      | `400` | `APG4022` | Bad Request | Not properly formatted JSON. Please check the JSON input.|
      | `400` | `APG4022` | Bad Request | Not properly formatted XML. Please check the XML input.|
      | `400` | `APG4011` | Bad Request | Some charactors in the request is not allowed. PLease check the request and try again.|
      | `401` | `APG4001` | Bad or Missing API Key | Apikey verification failed - Invalid ApiKey|
      | `401` | `APG4006` | Unauthorized | Invalid Access Token|
      | `401` | `APG4007` | Unauthorized | Privacy verification failed - Access Token Expired|
      | `401` | `APG4012` | Unauthorized | Privacy verification failed - Client ID could not be found|
      | `403` | `APG4003` | Forbidden | Privacy verification failed - Invalid App Details|
      | `404` | `APG4004` | The resource requested was not found | Invalid resource name or HTTP verb. Try again with correct resource name or HTTP verb.|
      | `404` | `APG4400` | Not Found | Requested resource is not found. Backend is not working as expected. Please try again later.|
      | `429` | `APG4008` | Too Many Requests | Service Error - The client app has exceeded maximum number of permitted requests|
      | `500` | `APG5001` | Server Busy | Service Error - System Has Exceeded Maximum Number of Permitted Requests|
      | `500` | `APG5004` | Internal Server Error | Service Error - The server encountered an error while attempting to fulfill the request.|
      | `500` | `APG5005` | Internal Server Error - UnAnticipated | Service Error - The server encountered an error while attempting to fulfill the request.|
      | `500` | `APG5000` | Internal Server Error | Error occurred while getting response from backend. Please try later.|
      | `502` | `APG5002` | Service Callout Failed | Service Error - Remote System could not be reached|
      | `502` | `APG5020` | Unexpected EOF at target| messaging.adaptors.http.flow.UnexpectedEOFAtTarget|
      | `503` | `APG5030` | The Service is temporarily unavailable| messaging.adaptors.http.flow.NoActiveTargets|
      | `504` | `APG5020` | Gateway Timeout| messaging.adaptors.http.flow.GatewayTimeout|


    required:
    - "code"
    - "message"
    properties:
      code:
        type: string
        description: Error Code represents a alpha-numeric error code received from the error
      message:
        type: string
        description: Message represents a textual description of a given error code
      developerMessage:
        type: string
        description: Developer Message is technical details about the error for the understanding of API consumer developer.
      moreInfo:
        type: array
        description: More details about the error as needed
        minItems: 1
        items:
          $ref: '#/definitions/moreInfo'
  moreInfo:
    type: object
    required:
    - "field"
    - "message"
    properties:
      field:
        type: string
        description: Each exact property field that was validated
      message:
        type: string
        description: Each error message on the property level validation done by the API
      
# Added by API Auto Mocking Plugin
host: swaggerhub.delta.com
basePath: /virts/Delta/RideShare/1.0.0