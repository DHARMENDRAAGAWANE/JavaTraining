#!groovy



//echo ("Version: "+userInput['ver'])


properties(
    [
        [$class: 'BuildDiscarderProperty', strategy:
          [$class: 'LogRotator', artifactDaysToKeepStr: '14', artifactNumToKeepStr: '5', daysToKeepStr: '30', numToKeepStr: '60']],
        pipelineTriggers(
          [
             // pollSCM('H/15 * * * *'),
           //   cron('@daily'),
          ]
        )
    ]
)
node('node_1') {

  def userInput = input(
 id: 'userInput', message: 'Let\'s promote?', parameters: [
 [$class: 'TextParameterDefinition', defaultValue: 'latest', description: 'Version', name: 'release'],
])




    stage('Checkout') {
        //disable to recycle workspace data to save time/bandwidth
        deleteDir()
        checkout scm

        //enable for commit id in build number
        //env.git_commit_id = sh returnStdout: true, script: 'git rev-parse HEAD'
        //env.git_commit_id_short = env.git_commit_id.take(7)
        //currentBuild.displayName = "#${currentBuild.number}-${env.git_commit_id_short}"
    }

    
  stage('deploy to si'){

    try{
      echo "Deploying sonar-demo to SI Started"
      sh 'ssh -q apps@103.129.98.172 /home/apps/devops/scripts/deployFromNexus.ksh sonar-demo 0.0.6 tgz'

    }catch (err){
      echo "[Failure] failed to deploy sonar-demo application in SI"
      currentBuild.result = "FAILURE"
      throw err
    }

     
  }

}
